
/********************************************************************************************************************************************************* 
=====================================================================НАЧАЛО 2 РАЗДЕЛА=====================================================================
**********************************************************************************************************************************************************/ 


//?2 Раздел, Урок 8, Тема: Способы применения JavaScript ==================================================================================================

//<script>alert('hello again')</script>
//?========================================================================================================================================================



//*2 Раздел, Урок 9, Тема: Консоль ========================================================================================================================

//undefined - означает что функция не возвращает никакого значения
//console.log('Hello console!');
//*========================================================================================================================================================



//?2 Раздел, Урок 10, Тема: Переменные. Комментарии =======================================================================================================

//var - устаревший и больше в основном не используется 

// var name = 'Rus'; 
// console.log(name);
// name ='Kat';
// console.log(name);

// var color
// console.log(color);
// color = 'elloy';
// console.log(color);

//JavaScript  имена могут включать в себя буквы, числа, знак доллора и нижнее подчеркивание
//Имена в JavaScript не могут начинаться с цифр 
//// 1color =  'green'
//Имена можно начинать писать со знака доллора, нижнего подчеркивание и букв
// так модно можно разделять слова так:
// myMainColor ='green'//camel case
// my_main_color //snake case
// my-main-color //kebab case
// MyMainCase //Pascal case

//let - используется сейчас

// const - используется сейчас.
//?========================================================================================================================================================



//*2 Раздел, Урок 11, Тема: let and const ========================================================================================================================

//let - полностью эдентично с вар

//const - не изменное значене
// const name ='Rus';
// console.log(name);
// ////name = 'Kate'// выбивает ошибку

// const color = 'green'; // обязательно нужно присваивать значение константе иначе выбивает ошибку
// console.log(color);

// const user = { //так можно присваивать несколько значений 
//    name: 'Rus',
//    gender: 'male',
//    age: '22'
// }
// console.log(user);

// user.name = 'Kat'; //благодаря записи через точку мы можем константе задать новое значение
// user.gender = 'gerl';
// user.age = '19';
// console.log(user);

// //// user = {  //однако у константы так их изменить нельзя, выбивает ошибку
// ////    name: 'Kate',
// ////    gender: 'gerl',
// ////    age: '19'
// //// }

// const colors = ['red', 'oreng', 'green', 'yelloy'];// массив создается из квадратных скобочек, дополнительное значение появляется в конце
// console.log(colors);
// colors.push('blue');
// console.log(colors);
////colors = ['red', 'oreng', 'green', 'yelloy'] //константе нельзя присвоить новый массив
//*========================================================================================================================================================



//?2 Раздел, Урок 12, Тема: Типы данных ===================================================================================================================

//типы данных разделяются на примитивные и ссылочные

//примитивные типы данных - существует 6 примитивных типов данных
//1. string - строка (любые символы которые находятся внтури ковычек: цифры, буквы, символы )
//2. namber - числовые типы данных (иногда делятся на целые, десятичные и тд. )
//3. Boolean - логический тип данных (имеет только два значения true или false)
//4. Null - пустое значение 
//5. Undefined - неопределенное значение ( когда переменной не присваивали никакого значения)
//6 Symbols - появился только с ES6

//ссылочные типы данных
//1. Array - массив
//2. Object Literal - объектные литералы
//3. Function -функции
//4. Date - даты
//5. Anything else... - и др... (классы обертки)

// let x = 'sonething'
// console.log(x)
// x = '3'
// console.log(x)

//примитивные типы данных

//string
// const someText = 'Some text';
// console.log(typeof someText);

// number
// const someNumber = 11;
// console.log(typeof someNumber);

// boolean
// const someBoolean = true;
// console.log(typeof someBoolean);

// const someBoolean1 = false;
// console.log(typeof someBoolean1);

// Null
// const someNull = null; //в консоле выводит значение object - является одним из багов JavaScript
// console.log(typeof someNull);

// Undefined
// let someUndefined;
// console.log(typeof someUndefined);

// Symbols;
// const someSymbols = Symbol();
// console.log(typeof someSymbols);


//Ссылочные типы данных - возвращают объект



//Array
// const someArray = [1, 2, 3, 4, 5, 6, 7,  8, 9];
// console.log(typeof someArray);

//Object Literal
// const someObjectLiteral = {
//    firstProperty: '12',
//    secondProerty: 'secondProerty'
// }
// console.log(typeof someObjectLiteral);

//Function
// const someFunction = function(){

// };
// console.log(typeof someFunction);

//Date
// const someDate = new Date();
// console.log(typeof someDate);

//Anything else...
//?========================================================================================================================================================



//*2 Раздел, Урок 13, Тема: Преобразование типов ========================================================================================================================

//Есть двав типо преобразования к строковому и к числовому типу

//Приведение к строковому типу String
// let x = String(111);
// x = String(2/2); //можно проводить какие либо действия в скобках
// x = String(true); // так же можно приводить к булинговому значению
// x = String(new Date()); //так же мы можем приводить и ссылочные типы
// x = String([1, 2, 3, 4, 5, 6, 7]) // в скобках считаются и запятые 

// toString
// x = (35).toString();
// x = (true).toString();
// x = (new Date()).toString();
// x = ([1, 2, 3, 4, 5, 6, 7]).toString();

// console.log(x);//само значение 
// console.log(typeof x);//тип строки
// console.log(x.length);//при помощи этого свойства выводится длинна строки

//приведение к числововму зеачению
//первый способ
// let y = Number('6.2121231241241242441244124');
// y = Number(false); // при значении true в консоль выводит 1б но при значении false выводит 0
// y = Number (null)//так же в консоль выводится 0
// y = Number ('text') //текстовые строки не распознаются как число
// y = Number ([1, 2, 3, 4, 5, 6])//так же массив нельзя распознать как число 

// console.log(y);//само значение 
// console.log(typeof y);//тип строки
// console.log(y.toPrecision(7));// благодаря этому свойству мы можем менять длинну значения чисел

//Второй способ приобразования к числу
// y = parseInt('123.213')//благодаря parseInt текстовое значение преобразовалось в числовое, отображается только целое число поскольку данное свойство отвечает за отображение целых чисел
// y = parseFloat('123.2131123') //отображает дробную часть, однако если 0 стоит в конце то его не отображает 

// console.log(y);//само значение 
// console.log(typeof y);//тип строки
// console.log(y.toPrecision(7));// благодаря этому свойству мы можем менять длинну значения чисел


// const x = 5;
// const y = 3;
// const z = x + y;

// console.log(z); //значение
// console.log(typeof z);//тип


// const d = 5;
// const k = '3'; //когда число складывается с строкой то происходит конкатенация(склеивание между собой строк или какого либо другого значения связанного со стракой)
// const m = d + k; //когда да значения оказываются строчными  то строки цепляются друг к другу
//однако если стоит (-)(*)(/) то джава преобразовывает эллементы в числовые  

// console.log(m); //значение
// console.log(typeof m);//тип
//*====================================================================================================================================================================



//?2 Раздел, Урок 14, Тема: Операции с числами ========================================================================================================================
// const a = 50; //первое число  значения (a, b, x) могут быть любыми
// const b = 12;  //второе число
// let x; //результат

//простые математические операции
// x = a + b;
// x = a / b; 
// x = a * b;
// x = a - b;
// x = a % b;//остаток от деления

//Math объект используется для вычесление
// x = Math.PI; //число пи
// x = Math.round(3.5); //округление
// x = Math.ceil(3.3); // округление в большую сторону
// x = Math.floor(3.7); //округление в меньшую сторону
// x = Math.sqrt(99.3); //квадратный корень
// x = Math.abs(-84); //обсолютное значение числа(число без знака -)
// x = Math.pow(3, 5); //возведение в степень
// x = Math.min(3, 45, 60, 0.00001); //минимальное значение из списка
// x = Math.max(2, 45, 67, 8888); //максимальное значение
// x = Math.round(Math.random()*40);//целое рандомное значение

// console.log(x);
//?====================================================================================================================================================================



//*2 Раздел, Урок 15, Тема: Строки ==================================================================================================================================

//Конкатенация строк
// let x;
// const y = 'Rus';
// const t = 'Kat';
// const h = ' '; //таким образом можно делать пробел 
// const age = 17;
// const g = 'Hey there!';
// x = 'Rus';
// x = 'Rus' +  ' Gavrilin';//конкотенация двух строк(скрепление)

// x = y + h + t;
// x = g + h + 'My name is' + h + y + ' ' + t + " I'm " + age + ' years old.';

//Экранирование
// x = 'I\'m 34 years old'; //при помощи обратного слеша мы можем обойти ограничение по ковычкам 
// x = "I like \"Loki\" movie" //есть так же такой способ

//Свойства и методы
// x = 'Hello!'.length; //выводит длинну строки включая все знаки припинания
// x = y.length;
// x = y.concat(h, t);//конкат
// x = h.concat(h, 'My name is ', y, h, t);
// x = x.toUpperCase();//делает из старой строки новую, но все буквы становятся заглавными
// x = x.toLowerCase(); //делает из старой строки новую, но все буквы становятся прописными 
// x = y[2];//индекс строки
// x = y.indexOf('u');//выводит номер. для того что бы узнать индекс повторяющейся буквы перед index пишем last. Если символа в строке нету то выводит  -1
// x = y.charAt(2);//символ на позиции
// const ciuo = 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit';
// x = ciuo.charAt(ciuo.length - 1);//индекс последнего знака в строке
// x = g.substring(0,2); //извлечение символов
// x = g.slice(-3);//так же можно извлекать символы однако можно извлечь несколько последних символов подставив знак -
// x = ciuo.split(' ');//так можно рахделить текст на слова, а так же на буквы, таким образом можно получить массив
// x = ciuo.replace('amet', '\"Loki\"')//замена одно символа на другой 
// x = ciuo.includes('sit')//так можно проверить содержит ли текст тот или иной символ 

// console.log(x);
//*==================================================================================================================================================================



//?2 Раздел, Урок 16, Тема: Шаблонные строки ========================================================================================================================

// const t = 'love';
// const w = 'viget';
// const q = 'quuuu';
// const y = '1000';

// let wordsHTML;

// Старый подход (до ES6)
// wordsHTML = '<h3>' + 'words love' + '</h3>' + '<ul>' + '<li>t:' + t + '</li>' + '<li>w:' + w + '</li>' + '<li>q:' + q + '</li>' + '<li>y:' + y + '</li>' + '</ul>';

//Новый подход (templete literals or template strings)
// wordsHTML = `
// <h3> Words love </h3>
//    <ul>
//       <li>t: ${t} </li>
//       <li>w: ${w} </li>
//       <li>q: ${q} </li>
//       <li>y: ${y} </li>
//       <li>f: ${2022+30} </li>
//       <li>Door: ${getDoorsNumber()} </li>
//       <li>y: ${y < 2000 ? '20%' : '10%'} </li>
//    </ul>
// `
// function getDoorsNumber(){
//    return 5;
// }

// document.body.innerHTML = wordsHTML//выводит текст на страницу
//?=====================================================================================================================================================================



//*2 Раздел, Урок 17, Тема: Задание Анкета =============================================================================================================================
// let color;

// color = prompt('Какой твой любиый цвет?');

// console.log('Твой любиый цвет ' + color);


/*Задание: 
Создать приложение с промтами (Как вас зовут?), (Какая ваша фамилия?), (Сколько вам лет?)*/
// let name = prompt('Как вас зовут?');
// let fam = prompt('Какая ваша фамилия?');
// let year = prompt('Сколько вам лет?');
// let color= prompt('Какой твой любиый цвет?');

// console.log('Моё имя ' + name);
// console.log('Моя фамилия ' + fam);
// console.log(`Мне ${year} лет`);
// console.log('Мой любиый цвет ' + color);
//*====================================================================================================================================================================



//?2 Раздел, Урок 18, Тема: Оператор сравнения ========================================================================================================================

// const x = '4120';
// const y = 324;
// let t = x != y // так же есть операторы такие как (<, <=, =>, ==(знак равенства), !=(Знак не равенства), ===(cтрогий знак равенства(к примеру число равно числу, а строка строке)))
// сравниваться могут и значения к примеру булинг значения или строки

// console.log(t);

// console.log(true == 1  );// так же можно сравнивать так( при сравнениии двух значений Nan  и Nan всегда будет folse)
//?====================================================================================================================================================================



//*2 Раздел, Урок 19, Тема: Приоретеи операторов ======================================================================================================================

// const x =  2 + 11 / 2;
// console.log(x);

// const y = 10 - x > 10; // действия выполняются в соответсвии приоретета оператора (больше инфы тут:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence)
// console.log(y);

// let x, y;
// x = y = 10 + (5 - 4) * 23

// console.log(x, y);
//*====================================================================================================================================================================



//?2 Раздел, Урок 20, Тема: Сокращённая форма записи операторов =======================================================================================================

// let x = 30;

// let y = 6;
// x += 12; //так можно записывать все арефметические операторы

// x ++; //увеличивает число на единицу так же можно и уменьшить 

// y = ++x // так игрику присваивается х увеличенный на 1, но если ++ будет после х то ему не будет прибовлятся 1 так же и с--

// console.log(x)
// console.log(y)
//?====================================================================================================================================================================



//*2 Раздел, Урок 21, Тема: Задание Лишний вес ========================================================================================================================
/*Задание расчитать ИМТ */

// let kg = prompt('Укажите ваш вес в кг');
// let m = prompt('укажите ваш рост в м');

// const ImT = kg / Math.pow(m, 2);
// const oz = ImT >= 25;

// console.log(ImT);
// console.log(oz);

// alert ('У вас избыточный вес? ' + oz);


//*====================================================================================================================================================================



//?2 Раздел, Урок 22, Тема: If Else Statement =========================================================================================================================

// let age = prompt ('Укажите ваш возраст')

// if( age >= 18){
//    console.log('Вы можете смотреть это видео')
// } 
// else {
//    console.log('Ты слишком маленький для этого видео')
// }
// const yearsLeft = 18 - age;
// console.log(`Ты слишком маленький. Ты можете посмотреть это видео через ${yearsLeft} лет`)


// let years = prompt ('Укажите ваш год рождения');
// let yearsNaw = prompt (' Укажите теперяшний год');
// const age = yearsNaw - years;

// let answer;

// if(age >= 18){
//    answer = 'Вы можете просматривать данный контент'
// } else{
//    answer = 'К сожалению в не можете просматривать данный контент(('
// }

// console.log(`Доступен ли мне данный контент? - ${answer}`)

//  const color = 'orange';

//  if ( color === 'green') {
//    console.log('Go');
//  } else if (color === 'yellow'){
//    console.log('Get ready!');
//  } else if(color === 'red'){
//    console.log('Stop');
//  } else{
//    console.log('Incorrect color!');
//  }
//?====================================================================================================================================================================



//*2 Раздел, Урок 23, Лишний вес с If Else. Задание; ====>>>> 2 Раздел, Урок 24, Тема: Лишний вес  If Else. Решение ===================================================

/*Задание расчитать ИМТ */

// let kg = prompt('Укажите ваш вес в кг');
// let m = prompt('укажите ваш рост в м');

// const ImT = kg / (m * 2);
// const oz = ImT >= 25;

// console.log(ImT);
// console.log(oz);

// alert ('У вас избыточный вес? ' + oz);
//========================================================================================================================================================

// let kg = prompt('Укажите ваш вес в кг');
// let m = prompt('укажите ваш рост в м');

// const ImT = kg / (m * 2);

// if (ImT>=18.5 && ImT<=24.99){
//    console.log('У вас нормальный вес ' + ImT);
// } else if (ImT>=16 && ImT<=18.5){
//    console.log('У вас недостаточная масса тела ' + ImT  + ' Нормай является 18.5-24.99');
// } else if (ImT<=16){
//    console.log('У вас выраженный дифицит массы тела ' + ImT  + ' Нормай является 18.5-24.99');
// } else if (ImT>=25 && ImT<=30){
//    console.log('У вас избыточная массы тела(Предожирение) ' + ImT  + ' Нормай является 18.5-24.99');
// } else if (ImT>=30 && ImT<=35){
//    console.log('У вас ожирение первой степени ' + ImT  + ' Нормай является 18.5-24.99');
// } else if (ImT>=35 && ImT<=40){
//    console.log('У вас ожирение второй степени ' + ImT  + ' Нормай является 18.5-24.99');
// } else if (ImT>=40 ){
//    console.log('У вас ожирение третьей степени ' + ImT  + ' Нормай является 18.5-24.99');
// }

//*===================================================================================================================================================================



//? 2 Раздел, Урок 25, Тема: Truthy и Falsy значения =================================================================================================================

/* Falsy или лживые значения это значения которые на самом деле не равны false но становятся им когда мы пытаемся сконвертировать их
в Boolean значения. Существует только 5 Falsy значений*/
// 0, '', undefined, null, NaN - когда мы будем пытаться сконвертировать их в Boolean то они примут значение False

/* Все остальные значения являются при конвертации true */

// console.log(Boolean(0)); //false
// console.log(Boolean('')); //false
// console.log(Boolean(undefined)); //false
// console.log(Boolean(null)); //false
// console.log(Boolean(NaN)); //false
// console.log(Boolean(1)); //true
// console.log(Boolean('I')); //true
// console.log(Boolean('love')); //true
// console.log(Boolean('you')); //true
// console.log(Boolean([])); //true

// let age = prompt (''); 
// if(age > 0){
//    console.log('Человек был рождён');
// } else {
//    console.log('Человек ещё не был рождён');
// }

/* так же можно найти переменную в коде*/

// let ImT;

// if (ImT) {
//    console.log('Вес определён');
// } else {
//    console.log('Вес не определён');
// }
//?================================================================================================================================================================



//* 2 Раздел, Урок 26, Тема: Boolean логика =======================================================================================================================

/*Boolean значения используются во всех языках програмирования*/
/******* Основные операторы *******/
// AND(и) OR(или) NOT(нет)

//AND(и) &&
/* если одно из значений не является правдой то действие не выполняется*/
// console.log(true && true);//true
// console.log(true && false);//false 
// console.log(false && false);//false

//OR(или) ||
/*Действие не выполняетс только если все являетс ложью*/
// console.log(true || true);//true
// console.log(true || false);//true
// console.log(false || false);//false

//NOT(нет) !...(...-значение)
// console.log(!true);//false 
// console.log(!false);//true
//==================================================================

//==================//
///***AND(и) &&***///
//==================//
// const HasMoney = true;
// const isAdult = false;

// if (HasMoney && isAdult){
//    console.log('Вы можете купить напиток');
// } else {
//    console.log('Вы не можете купить напиток');
// }
//==================================================================

//==================//
///***OR(или) ||***///
//==================//
// const HasMoney = true;
// const isAdult = false;

// if (HasMoney || isAdult){
//    console.log('Вы можете купить напиток');
// } else {
//    console.log('Вы не можете купить напиток');
// }
//==================================================================

//==================//
///***NOT(нет) !***///
//==================//

// const HasMoney = true;
// const isAdult = true;
// const x = true
//console.log(!HasMoney);

// if (HasMoney && isAdult && !x){
//    console.log('Вы можете купить напиток');
// } else {
//    console.log('Вы не можете купить напиток');
// }
//*===================================================================================================================================================================



//? 2 Раздел, Урок 27, Тема: Switch Statement ========================================================================================================================

// const color = 'green'
//  if ( color === 'green') {
//    console.log('Go');
//  } else if (color === 'yellow'){
//    console.log('Get ready!');
//  } else if(color === 'red'){
//    console.log('Stop');
//  } else{
//    console.log('Incorrect color!');
//  }

/* switch - является переключателем(альтернативный способо написания if else if если нужно сравнить несколько значений) 
case - указывае значения которое будет отвечать за параметры
break - прервать
default - по умолчанию 
*/

// const color = 'green'
// switch(color){
//    case 'green': 
//       console.log('Go');
//       break;
//    case 'yellow':
//       console.log('Get ready!');
//       break;
//    case 'red':
//       console.log('Stop');
//       break;
//    default:
//       console.log('Incorrect color!');
// }


// let week = prompt('Укажите какой сегодня день недели');

// switch(week){
//    case 'Понедельник':
//       console.log('Сохраняйте спокойствие и притворитесь что это не понелельник');
//       break;
//    case 'Вторник':
//       console.log('Что может быть лучше вторника? Всё. Всё может быть лучше вторника.');
//       break;
//    case 'Среда':
//       console.log('Работаешь такой, работаешь, уже вроде бы целую неделю, а потом раз, и среда');
//       break;
//    case 'Четверг':
//       console.log('Ты ожидал сегодня пятницу? Прости, но сегодня четверг^w^');
//       break;
//    case 'Пятница':
//       console.log('Пятница создана для того, чтобы не думать так уж плохо о рабочих днях.');
//       break; 
//    case 'Суббота':
//       console.log('Не бойтесь творить, чибучить и удивлять в субботу, в воскресенье вам обо всем расскажут.');
//       break; 
//    case 'Воскресенье':
//       console.log('Воскресенье — день с повышенным содержанием понедельника в крови.');
//    break;
//       default:
//          console.log('Вы указали неверные данные! Попробуйте снова');
// }
//?================================================================================================================================================================



//*2 Раздел, Урок 28, Тема: Statements & Expressions ==============================================================================================================

//Expressions(вырожение) - код который производит значения(слова в предложении)
// 2+2
// 36
// true && false

//Statements(выражение) - не производит сам по себе какое либо значение(полное предложеие)
// const namber = 10;

//Statements
// if (number > 0){
//    const text = 'The namber is positive';
// }

//Expressions
// console.log(`${number - 2} is also positive number.`)
//*================================================================================================================================================================



//?2 Раздел, Урок 29, Тема: Тернарный оператор ====================================================================================================================

// const money = 1111;
// const cos = 1111;
//    1 часть                 2 часть                               3 часть
// money >= cos ? console.log('Ты можешт это купить ') : console.log('Ты не можешт это купить ');

// const buy = money >= cos ? ('Ты можешт это купить ') : ('Ты не можешт это купить ');
// console.log(buy);

// let buy;
//    if (money >= cos){
//       buy = 'Ты можешь это купить ';
//    } else {
//       buy = 'Ты не можешь это купить';
//    } console.log(buy);

//    console.log(`Ты ${money >= cos ? '' : 'не' } можешь это купить`);
//?================================================================================================================================================================



//*2 Раздел, Урок 30-31, Тема: Тернарный оператор. Задание =======================================================================================================

/* Задание */
/* Сделать так что бы выводилось в консоле и таблицчке можем ли мы купить алкоголь или нет*/

// let age = prompt ('Укажите ваш возраст');
// let money = prompt (' Укажите сколько денег вы имеете при себе');
// const cos = 2343;
// const buy = (money >= cos) && (age >= 18) ? ('Вы можете это купить ') : ('Вы не можете это купить ');
// console.log = alert(buy);

//*================================================================================================================================================================



//?2 Раздел, Урок 32, Тема: Версии JavaScript =====================================================================================================================

/* История JavaScript
   ===> ES5 ===> * ES6(ES2015) * ===> ES7(ES2016) ===> ES8(ES2017) ===>
   ===> ES9(ES2018) ===> ES10(ES2019) ===> ES11(ES2020) ===> ES12(ES2021) ===> ...

Babel используется для трансполирования и полифиллинга когда(Обратное преобразование в ES5 для старых браузеров)

ES5 ===> поддерживается почти во всех браузерах 
ES6 + ===> Хорошо поддерживаются во всех старых браузерах. Но не поддерживается в старых
   */
//?================================================================================================================================================================



//*2 Раздел, Урок 33, Тема: Strict Modet  =========================================================================================================================

//strict mode - 'use strict'(активация)
// 'use strict'

// let hasCertificate = false;
// const possExam = true;

// if(possExam) hasCertificate = true;
// if (hasCertificate) console.log('Wow')
//*================================================================================================================================================================



//?2 Раздел, Урок 34, Тема: Функции ===============================================================================================================================

// function text(){
//    console.log('Приветик!');
// }
// text();
// text();
// text();
// text();
// text();
// text();
// text();

// function colors(item, color){
//    console.log(item, color);
//    const colors = `The ${item} is ${color}.`;
//    console.log(colors);
// }

// colors('door','blue');
//?================================================================================================================================================================



//*2 Раздел, Урок 35, Тема: Функции. Declarations vs Expressions =================================================================================================

//Declarations
// function getAge(year, yearsNaw){
//    return yearsNaw - year; 
// }
// const myAge = getAge(2003, 2022);
// console.log(myAge);

//Expressions
// const getAge2 = function (year, yearsNaw){
//    return yearsNaw - year; 
// }
// const myAge2 = getAge(2003, 2022);
// console.log(myAge2);
//*================================================================================================================================================================



//?2 Раздел, Урок 36, Тема: Стрелочные функции (arrow functions) ==================================================================================================
// const getAge3 = (year, yearsNaw) => yearsNaw - year;
// const myAge3 = getAge3(2003, 2022);

// const alcohol = (year, yearsNaw) => {
//    const age = yearsNaw - year;
//    const person = age >= 20 ? true : false;
//    return person;
// } 

// console.log(alcohol(2003, 2022))
//?================================================================================================================================================================



//*2 Раздел, Урок 37, Тема: Вызов функций внутри других функций  ==================================================================================================

// function colorsMix (color1, color2){
//    const newColor = `${color1} + ${color2}`
//    return newColor;
// }

// function colors(item, color1, color2){
//    const color = colorsMix(color1, color2)
//    const colorsItem = `The ${item} is ${color}.`;
//    return colorsItem;
// }

// const colorsCar = colors('car', 'red', 'orenge');
// console.log(colorsCar)
//*================================================================================================================================================================



//?2 Раздел, Урок 38, Тема: Заметка к видео Функции. Задание =====================================================================================================

/*Задание:
   Задача Отделов продаж
Есть два отдела продаж - Отдел 1 и Отдел 2.
Вам нужно оценить квартальные продажи.
Для этого вам нужно рассчитать средние продажи за месяц в квартале для каждого отдела.

1.Создайте функцию стрелки getAverage для расчета среднего объема продаж за месяц в квартале.
2.Используйте функцию getAverage для вычисления среднего значения для каждого отдела.
3.Создайте функцию print Bonus, которая принимает средние продажи каждого отдела в качестве параметров: 
print Bonus(dept1AverSales, dept2AverSales). Если продажи одного отдела по крайней мере на 30% превышают продажи другого, 
функция должна рассчитать 
бонус для победителя в процентах от этой разницы и записать это в консоль. Например, 
если у отдела 1 продаж на 35% больше, 
функция должна записать в консоль следующее:
"Отдел 1 получит бонус в размере 35%’.
Используйте функцию печати бонуса с двумя наборами данных.
*/
//?===============================================================================================================================================================



//*2 Раздел, Урок 39-40, Тема: Функции. Задание ==================================================================================================================
//* Решение

// const getAverage = (namber1, namber2, namber3) => (namber1 + namber2 + namber3) / 3;

// const Dept1 = getAverage (35467, 29842, 38501);
// const Dept2 = getAverage (70533, 50121, 33899);
// const Dept3 = getAverage (50301, 21984, 19207);
// const Dept4 = getAverage (72381, 41562, 29465);

// console.log(Math.trunc(Dept1),Math.trunc(Dept2),Math.trunc(Dept3), Math.trunc(Dept4))


// const printBonus = function(dept1AverSales, dept2AverSales) {
//    if  (dept1AverSales > dept2AverSales){
//       const razn = dept1AverSales - dept2AverSales;
//       const prosent = razn / dept2AverSales * 100;
//       console.log(`Первый депортамент показали хороший результат и получили бонус в размере ${prosent}`)
//    }else if (dept1AverSales < dept2AverSales){
//       console.log('Первый депортамент надеюсь получит хорошие результаты в следующем квартале')
//    } else if (prosent <= 30){
//       console.log('Буду ждать от вас хороший результатов в следующем квартале')
//    }if  (dept2AverSales > dept1AverSales){
//       const razn = dept2AverSales - dept1AverSales;
//       const prosent = razn / dept1AverSales * 100;
//       console.log(`Второй депортамент показали хороший результат и получили бонус в размере ${prosent}`)
//    } else if (dept2AverSales < dept1AverSales){
//       console.log('Второй депортамент надеюсь получит хорошие результаты в следующем квартале')
//    } else if (prosent <= 30){
//       console.log('Буду ждать от вас хороший результатов в следующем квартале')
//    }
// }




// printBonus(Dept1, Dept2);
// printBonus(Dept3, Dept4);


//*================================================================================================================================================================



//?2 Раздел, Урок  41, Тема: Массивы =============================================================================================================================

//первый способ создания массивов
// const reindColor = ['красный', 'голубой', 'оранжевый', 'фиолетовый']

// console.log(reindColor[1]);
// console.log('Этот цвет ' + reindColor[2]);
// reindColor[2] = 'персиковый';
// reindColor[reindColor.length] = 'индиго';
// console.log(reindColor);


//второй способ создания массивов
// const namerL = [];
// namerL[0] = 'первый';
// namerL[1] = 'второй';
// namerL[2] = 'третий';
// namerL[3] = 'четвертый';
// namerL[4] = 'пятый';
// namerL[5] = 'шестой';
// namerL[6] = 'седьмой';

//третий способ 
// const namerL = new Array ('один', 'два', 'три', 'четыре', 'пять') //массивы могут содержать не только строки но и различные типы данных, так же в одном массиве может быть несколько типов данных. Чаще всего их используют с числовым типом данных. 

// console.log(namerL);

//пример с различными типами данных
// const anyItems = [4, true, Date(), 'memory']
// console.log(anyItems);
//?================================================================================================================================================================



//*2 Раздел, Урок 42, Тема: Методы массивов =======================================================================================================================

// let namber =  [1, 2, 3, 4, 56, 32, 9324, 23];
// let result;

// result = namber.length;//длинна массива

// result = Array.isArray(namber);//является ли данная страка массивом 

// result = namber.indexOf(4);//индекс запрашиваемого числа

// result = namber.push(11);//добавляет эллемент в конец массива (можно добавить несколько эллементов)
// result = namber.pop();//удаляет последний эллемент в массиве и возращает его в консоле 

// result =  namber.unshift(1);//добавляет эллемент в начало массива (можно добавить несколько эллементов)
// result = namber.shift();//удаляет первый эллемент в массиве и возращает его в консоле 

// result = number.splice(1, 3);//по идее должен удалять эллементы и возвращать их в консоль

// result = namber.reverse();//переворачивает значения массива

// result = namber.slice(5);//удаляет эллементы массива в начале(в скобках указываем последний эллемент до которого хотим вырезать)

// result = namber.concat(result) //добавляет к массиву намбер, массив резалт

// console.log(result);
// console.log(namber);
//*================================================================================================================================================================



//?2 Раздел, Урок 43 - 44, Тема: Массивы. Задание - 1 ============================================================================================================

// Задача Калькулятора Подсказок
// Вы должны создать калькулятор чаевых.
// Калькулятор должен рассчитать чаевые следующим образом:
// Если сумма счета меньше 20 долларов, чаевые должны составлять 20%. В других случаях чаевые должны составлять 15%.

// Создайте функцию со стрелкой calculate Tips(), которая принимает параметр счета и возвращает соответствующие чаевые.
// Создайте массив счетов с приведенными ниже тестовыми данными.
// Создайте массив чаевых для каждого счета.
// Создайте массив общих счетов, то есть счет + чаевые.

// Тестовые данные: 11, 20, 47.


//Решение
// ?if :else

// const calculateTips = bill => bill <20 ? bill * 0.2 : bill * 0.15;

// const bill = [11, 20, 47];
// const tips = [calculateTips(bill[0]), calculateTips(bill[1]), calculateTips(bill[2])];
// const totals = [bill[0] + tips[0], bill[1] + tips[1], bill[2] + tips[2]];
// console.log(bill, tips, totals)
//?================================================================================================================================================================



//*2 Раздел, Урок 45, Тема: Объекты  =============================================================================================================================

// const personData = ['Kat', 'Yanovich', '19', '160', '2003', '11'];
// console.log(personData[5]);

// katObgekt = {name:'Kat',
//    lastname:'Yanovich',
//    year: 19,
//    height:160,
//    birthYear: 2003,
//    likeNamber:11};

// console.log(katObgekt)
//*================================================================================================================================================================



//?2 Раздел, Урок 46, Тема: Объекты. Dot vs Bracket Notation ======================================================================================================

// katObgekt = {name:'Kat',
//    lastname:'Yanovich',
//    year: 19,
//    height:160,
//    birthYear: 2003,
//    likeNamber:11,
//    famale:['Ruslan', 'Kat']
// };

// console.log(katObgekt);
// console.log(katObgekt.birthYear);
// console.log(katObgekt['birthYear']);

// const basName = 'name';
// console.log(katObgekt['last' + basName]);

// const user = prompt('Что вы хотите знать о Кате? name, lastname, year, heigth, birthYear, likeNamber');
// if(katObgekt[user]){
//    console.log(katObgekt[user]);//так мы можем выводить пользователю информацию в консоле
// }else{
//    console.log('прочитай внимательно')
// }
//создаем новые свойсва
// katObgekt.location = 'Belarus';
// console.log(katObgekt)
// console.log(`${katObgekt.name} имеет ${katObgekt.famale.length} члена семьи и первым из них является ${katObgekt.famale[0]}`);
//?================================================================================================================================================================



//*2 Раздел, Урок 47, Тема:  Методы объектов ======================================================================================================================

// katObgekt = {name:'Kat',
//    lastname:'Yanovich',
//    height:160,
//    birthYear: 2003,
//    likeNamber:11,
//    famale:['Ruslan', 'Kat'],
//    hasDriverLicense: false,
// calcAge: function(){
// console.log(this)//так мы можем узнать что находится в this/ является обращением к методу
//    return 2022 - this.birthYear
// }

//    calcAge: function(){ 
//       this.age = 2022 - this.birthYear
//       return 2022 - this.birthYear
//    },

//    getSummary: function(){
//       return `${this.name} is a ${this.calcAge()}-year old and she has ${this.hasDriverLicense ? 'a' : 'no'} driver license`
//    }
   
// };

// const calcAge = function(birthYear){
//    return 2022 - birthYear
 // }

//два способа записи
// console.log(katObgekt.calcAge())// в скобках мы не указыаем значения поскольку ране мы их уже писали
// console.log(katObgekt.calcAge())
// console.log(katObgekt.calcAge())
// console.log(katObgekt.calcAge())
// console.log(katObgekt['calcAge'](2003))
// console.log(katObgekt.calcAge()) //вызывая метод незабываем про скобки
// console.log(katObgekt.getSummary())
// console.log(katObgekt.age);
// console.log(katObgekt.age);
// console.log(katObgekt.age);
// console.log(katObgekt.age);

//*================================================================================================================================================================



//?2 Раздел, Урок 48-49 , Тема: Объекты. Задание ===============================================================================================================================
/* Задание
Давайте вернемся к индексу ИМТ! На этот раз мы будем использовать объекты для выполнения вычислений!
ИМТ = вес / рост ** 2 = вес / (рост * рост) (вес в кг и рост в метрах)
Ваша задача:
У нас есть два друга - Джек и Майк
1. Для каждого из них создайте объект со свойствами его имени, фамилии, веса и роста (Джек Уайт и Майк Блэк).
2. Создайте метод расчета ИМТ для каждого объекта для расчета ИМТ (один и тот же метод для обоих объектов). Сохраните значение BMI в свойстве, а также верните его из метода.
3. Войдите в консоль, у кого ИМТ выше, а также укажите полное имя и соответствующий ИМТ. Пример: "ИМТ Джека Уайта (25,7) выше, чем у Майка Блэка (22,4)!"
Данные испытаний: Вес домкрата 79 кг, высота 1,70 м. Майк весит 91 кг, а его рост составляет 1,93 м.
Счастливого кодирования! */

// testObgekt = {

//    jhek: jhekObgekt ={
//             name: 'Джек',
//             lastName: 'Увайт',
//             weight: 90,
//             height: 1.86,
//             calkIMT: function(){ 
//                return this.weight / this.height ** 2 
//             }
//    },
   
//    mike: mikeObgekt ={
//             name: 'Майк',
//             lastName: 'Блэк',
//             weight: 70,
//             height: 1.87,
//             calkIMT: function(){ 
//                return this.weight / this.height ** 2 
//             }
//    },

// Imt: function(){
//          return `${this.jhek>this.mike ? 'ИМТ $(this.jheh.jhekObgekt.neme) выше чем у $(this.mike.mikeObgekt.neme)' : 'ИМТ $(this.mike.mikeObgekt.neme) выше чем у $(this.jheh.jhekObgekt.neme)' }`
 //       }

// } 



//    const jhekObgekt = {
//             name: 'Джек',
//             lastname: 'Увайт',
//             weight: 90,
//             height: 1.86,
//             calkIMT: function(){ 
//                this.bmi = this.weight / this.height ** 2 
//                return this.bmi
//             }
//    }
   
//    const  mikeObgekt ={
//             name: 'Майк',
//             lastname: 'Блэк',
//             weight: 70,
//             height: 1.87,
//             calkIMT: function(){ 
//               this.bmi = this.weight / this.height ** 2 
//             return this.bmi
//             }
//    }

// console.log(jhekObgekt.calkIMT())
// console.log(mikeObgekt.calkIMT())

// if (jhekObgekt.calkIMT > mikeObgekt.calkIMT){ // Если BMI у Джека будет больше, чем у Майка, то будет реализован следующий вариант:
//    console.log( `У ${jhekObgekt.name} ${jhekObgekt.lastname} индекс BMI ${jhekObgekt.calkIMT} выше, чем у ${mikeObgekt.name + mikeObgekt.lastname} BMI ${mikeObgekt.bmi}`)
// } else { // Если BMI у Майка будет больше, чем у Джека, то реализован будет следующий вариант: 
//    console.log(`У ${mikeObgekt.name} ${mikeObgekt.lastname} индекс BMI ${mikeObgekt.bmi} выше, чем у ${jhekObgekt.name} ${jhekObgekt.lastname} BMI ${jhekObgekt.bmi}` )
// }
//?================================================================================================================================================================



//*2 Раздел, Урок 50, Тема: Цикл For ======================================================================================================

// for(let rep = 1; rep <= 10; rep += 2){// часть начальное значение, вторая часть условие цикла, третья часть значение счётчика
//    console.log(`Push ups repetitin ${rep}`)
//    console.log('helloy');
// }

// console.log('aut of loop')
//*================================================================================================================================================================



//?2 Раздел, Урок 51, Тема: Циклы и массивы  =======================================================================================================================

// const user1234 = ['Kat', 'Yanovich', '19', '24.01', ['Ruslan'], false, 0, 'love', true];

// const types = [];//пустой массив
// console.log(types)

// console.log(user1234[0])
// console.log(user1234[1])
// console.log(user1234[2])
// console.log(user1234[3])
// console.log(user1234[4])

// for(let i = 0; i < 6; i++) {
//    console.log(user1234[i]);
// }

//вычеслять длинну массива в цикле можно так 
// for(let i = 0; i < user1234.length; i++) {
//    console.log(user1234[i], typeof user1234[i]); //typeof user1234[i] таки образом мы можем узнать типы значений в массиве
   // types[i] = typeof user1234[i] //1 способ заполнения массива 
   // types.push(typeof user1234[i]) //2 способ
//    types.unshift(typeof user1234[i]) //3 способ

// }

// console.log(types)

// const birthYear = [1231, 1251, 2332, 2004, 3240, 1253, 2132];
// const age = [];

// for (let i = 0; i < birthYear.length; i++){
//    age.push(2022 - birthYear[i]);//вычесление
// }

// console.log(age);
//?================================================================================================================================================================



//*2 Раздел, Урок 52, Тема: Break & Continue ======================================================================================================================
//Continue - продолжить, прерывает текущий цикл и начинает новый
//Break - прервать, прерывает цик полностью

// const user1234 = ['Kat', 'Yanovich', 1231, '19', '24.01', ['Ruslan'], false, 0, 'love', true, 121];

// console.log('Continue example')
// for(let i = 0; i < user1234.length; i++) {
//    if (typeof user1234[i] !== 'string') continue;

//       console.log(user1234[i], typeof user1234[i]); 
// }


// console.log('Break example')
// for(let i = 0; i < user1234.length; i++) {
//    if (typeof user1234[i] !== 'number') break;

//       console.log(user1234[i], typeof user1234[i]); 
// }

//*================================================================================================================================================================



//?2 Раздел, Урок 53, Тема: Итерация в обратном порядке. Цикл в цикле =============================================================================================
// const user1234 = ['Kat', 'Yanovich', 1231, '19', '24.01', ['Ruslan'], false, 0, 'love', true, 121];

// for (let i = user1234.length -1; i >= 0; i--){
//    console.log(user1234[i]);
// }

// console.log('backwards iteration');
// const user1234 = ['Kat', 'Yanovich', 1231, '19', '24.01', ['Ruslan'], false, 0, 'love', true, 121];

// for (let i = user1234.length -1; i >= 0; i--){
//    console.log(user1234[i]);
// }

// console.log('loop in loop');

// for (let Exe = 1; Exe <=3; Exe++ ){
//    console.log(`Exe ${Exe}`);

//    for(re = 1; re <= 5; re++){
//       console.log(`re ${re}`)
//    }
// }




// console.log('backwards iteration');
// const user1234 = ['Kat', 'Yanovich', 1231, '19', '24.01', ['Ruslan'], false, 0, 'love', true, 121];

// for (let i = user1234.length -1; i >= 0; i--){
//    console.log(user1234[i]);
// }

// console.log('loop in loop');

// for (let Exe = 1; Exe <=3; Exe++ ){
//    console.log(`Exe ${Exe}`);

//    for(re = 1; re <= 5; re++){
//       console.log(`ex ${Exe} re ${re}`)
//    }
//    console.log('Out of iner loop');
// }
// console.log('Out of outer loop');
//?================================================================================================================================================================



//*2 Раздел, Урок 54, Тема: Цикл While ============================================================================================================================


//*================================================================================================================================================================



//?2 Раздел, Урок 55-56, Тема: Циклы. Задание =====================================================================================================================


//?================================================================================================================================================================


/******************************************************************************************************************************************************************** 
===========================================================================КОНЕЦ 2 РАЗДЕЛА===========================================================================
*********************************************************************************************************************************************************************/ 


